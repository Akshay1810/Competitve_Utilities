#include<bits/stdc++.h>
using namespace std;

vector<int> getDivisors(int n) {
    vector<int> divisors;
    int root = static_cast<int>(std::sqrt(n));
    
    for (int i = 1; i <= root; ++i) {
        if (n % i == 0) {
            divisors.push_back(i);
        }
    }
    
    std::sort(divisors.begin(), divisors.end());
    return divisors;
}

int solve(int n){
    vector<int> divi = getDivisors(n);
    int ans = 0;
    if(n%2 == 0){
        for(int i = 0 ; i < divi.size(); i++){
           int a = divi[i], b = n/divi[i];
           if(a%2 == 0 and b%2 == 0){
               if((n/divi[i] - divi[i])>0){
                   ans++;
               }
           }
        }
    }else{
        for(int i = 0 ; i < divi.size(); i++){
           int a = divi[i], b = n/divi[i];
           if(a%2 == 1 and b%2 == 1){
               if((n/divi[i] - divi[i])>0){
                   ans++;
               }
           } 
        }
    }
    return ans;
}
